{
    "189": {
        "0": {
            "belong": "Kerry",
            "question": "Show me about the distribution of date_address_to and the amount of date_address_to, and group by attribute other_details and bin date_address_to by month in a bar chart.",
            "hardness": "Extra Hard",
            "isDataCorrect": true,
            "isStyleCorrect": false,
            "evaluation": "Rotated x-axis",
            "code": "import pandas as pd\nimport matplotlib.pyplot as plt\nfrom datetime import datetime\n\ndf = pd.read_csv('./visEval_dataset/databases/behavior_monitoring/student_addresses.csv')\n\ndf['date_address_to'] = pd.to_datetime(df['date_address_to'])\ndf['month_year'] = df['date_address_to'].dt.to_period('M')\ngrouped_df = df.groupby(['month_year', 'other_details']).size().unstack()\n\nfig, ax = plt.subplots(1, 1, figsize=(10, 4))\ngrouped_df.plot(kind='bar', ax=ax)\n\nax.set_xlabel(\"Month-Year\")\nax.set_ylabel(\"Number of Addresses\")\nax.set_title(\"Distribution and Count of 'date_address_to' by Month and Other Details\")\nplt.suptitle(\"\")\nplt.show()",
            "addRule": "If chart has enough space, rotate xtick to 0 using \"plt.xticks(rotation=0)\"",
            "addExample": null
        }
    },
    "194": {
        "0": {
            "belong": "Kerry",
            "question": "Show me about the distribution of date_address_to and the sum of monthly_rental, and group by attribute other_details and bin date_address_to by month in a bar chart.",
            "hardness": "Extra Hard",
            "isDataCorrect": true,
            "isStyleCorrect": false,
            "evaluation": "Rotated x-axis",
            "code": "import pandas as pd\nimport matplotlib.pyplot as plt\ndf = pd.read_csv('./visEval_dataset/databases/behavior_monitoring/student_addresses.csv', parse_dates=['date_address_to'])\n\ndf['year_month'] = df['date_address_to'].dt.to_period('M')\nmonthly_rental_sum = df.groupby(['other_details', 'year_month'])['monthly_rental'].sum().unstack()\n\nfig, ax = plt.subplots(1, 1, figsize=(10, 4))\nmonthly_rental_sum.plot(kind='bar', ax=ax)\nax.set_title('Distribution of Date Address To and Sum of Monthly Rental')\nax.set_xlabel('Month')\nax.set_ylabel('Sum of Monthly Rental')\nfig.suptitle('')\nplt.xticks(rotation=45)\nplt.tight_layout()\nplt.show()",
            "addRule": null,
            "addExample": null
        }
    },
    "195": {
        "0": {
            "belong": "Kerry",
            "question": "Give me the comparison about the average of monthly_rental over the  date_address_to , and group by attribute other_details and bin date_address_to by month by a bar chart.",
            "hardness": "Extra Hard",
            "isDataCorrect": true,
            "isStyleCorrect": false,
            "evaluation": "Rotated x-axis; Used key as legend name, not the specific data meaning",
            "code": "import pandas as pd\nimport matplotlib.pyplot as plt\n\ndf = pd.read_csv('./visEval_dataset/databases/behavior_monitoring/student_addresses.csv')\ndf['date_address_to'] = pd.to_datetime(df['date_address_to'])\ndf['month'] = df['date_address_to'].dt.to_period('M')\ngrouped = df.groupby(['month', 'other_details'])['monthly_rental'].mean().unstack()\n\nfig, ax = plt.subplots(1, 1, figsize=(10, 4))\ngrouped.plot(kind='bar', ax=ax)\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\nax.set_xlabel('Month')\nax.set_ylabel('Average Monthly Rental')\nax.set_title('Average Monthly Rental Comparison by Property Type')\nplt.suptitle('')\nplt.xticks(rotation=45)\nplt.tight_layout()\nplt.show()",
            "addRule": "If you know the specific data meaning of the column name, use the meaning as legend name",
            "addExample": null
        }
    },
    "196": {
        "0": {
            "belong": "Kerry",
            "question": "A bar chart shows the distribution of  date_address_from and the amount of date_address_from , and group by attribute other_details and bin date_address_from by year.",
            "hardness": "Extra Hard",
            "isDataCorrect": false,
            "isStyleCorrect": false,
            "evaluation": "X-axis label overflowed. Missing part of X-axis data (2018) because of \"ax.xaxis.set_major_locator(mdates.YearLocator())\"",
            "code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib.dates as mdates\n\ndf = pd.read_csv('./visEval_dataset/databases/behavior_monitoring/Student_Addresses.csv')\ndf['date_address_from'] = pd.to_datetime(df['date_address_from'])\ndf['year'] = df['date_address_from'].dt.year\n\ndf_grouped = df.groupby(['year', 'other_details']).size().unstack(fill_value=0)\n\nfig, ax = plt.subplots(figsize=(10, 4))\ndf_grouped.plot(kind='bar', stacked=True, ax=ax)\n\nax.set_xlabel('Year')\nax.set_ylabel('Count of Address Changes')\nax.set_title('Distribution of Address Changes Over Time by Type')\n\nplt.suptitle('')\nax.xaxis.set_major_locator(mdates.YearLocator())\nplt.xticks(rotation=45, ha='right') \n\nplt.show()",
            "addRule": "Don't use plt.xticks(ha) when not necessary. \nIf you already dealt with the data format, don't need to use set_major_locator() again.",
            "addExample": null
        }
    },
    "201": {
        "0": {
            "belong": "Kerry",
            "question": "Give me the comparison about the sum of monthly_rental over the  date_address_from , and group by attribute other_details and bin date_address_from by year by a bar chart.",
            "hardness": "Extra Hard",
            "isDataCorrect": true,
            "isStyleCorrect": false,
            "evaluation": "Rotated x-axis",
            "code": "import pandas as pd\nimport matplotlib.pyplot as plt\n\ndf = pd.read_csv('./visEval_dataset/databases/behavior_monitoring/Student_Addresses.csv')\ndf['date_address_from'] = pd.to_datetime(df['date_address_from'])\ndf['year'] = df['date_address_from'].dt.year\n\ngrouped = df.groupby(['year', 'other_details'])['monthly_rental'].sum().unstack()\n\nfig, ax = plt.subplots(1, 1, figsize=(10, 4))\ngrouped.plot(kind='bar', ax=ax, width=0.7)\n\nax.set_xlabel('Year')\nax.set_ylabel('Total Monthly Rental')\nfig.suptitle('')\nax.set_title('Comparison of Total Monthly Rental by Year and Property Type')\n\nplt.show()",
            "addRule": null,
            "addExample": null
        }
    },
    "202": {
        "0": {
            "belong": "Kerry",
            "question": "Visualize a bar chart about the distribution of  date_address_from and the average of monthly_rental , and group by attribute other_details and bin date_address_from by year.",
            "hardness": "Extra Hard",
            "isDataCorrect": true,
            "isStyleCorrect": true,
            "evaluation": null,
            "code": "import pandas as pd\nimport matplotlib.pyplot as plt\nfrom dateutil import parser\n\ndf = pd.read_csv(\"./visEval_dataset/databases/behavior_monitoring/Student_Addresses.csv\")\ndf['date_address_from'] = pd.to_datetime(df['date_address_from'])\ndf['year_address_from'] = df['date_address_from'].dt.year\ngrouped = df.groupby(['other_details', 'year_address_from']).monthly_rental.mean().unstack()\n\nfig, ax = plt.subplots(figsize=(10, 4))\ngrouped.plot(kind='bar', ax=ax)\nax.set_xlabel('Year')\nax.set_ylabel('Average Monthly Rental ($)')\nax.set_title('Average Monthly Rental by Year and Other Details')\nplt.suptitle('')\nplt.xticks(rotation=0)\nplt.show()",
            "addRule": null,
            "addExample": null
        }
    },
    "210": {
        "0": {
            "belong": "Kerry",
            "question": "Find  date_address_to and the sum of monthly_rental , and group by attribute other_details and bin date_address_to by weekday, and visualize them by a bar chart.",
            "hardness": "Extra Hard",
            "isDataCorrect": true,
            "isStyleCorrect": true,
            "evaluation": null,
            "code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib.dates as mdates\n\ndf = pd.read_csv(\"./visEval_dataset/databases/behavior_monitoring/Student_Addresses.csv\")\ndf['date_address_to'] = pd.to_datetime(df['date_address_to'])\ndf['weekday'] = df['date_address_to'].dt.day_name()\n\ngrouped = df.groupby(['other_details', 'weekday'])['monthly_rental'].sum().unstack()\ngrouped = grouped.reindex(columns=['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'])\n\nax = grouped.plot(kind='bar', stacked=False, figsize=(12, 6))\nax.set_xlabel('Other Details')\nax.set_ylabel('Sum of Monthly Rental')\nax.set_title('Sum of Monthly Rental by Weekday and Other Details')\nplt.suptitle('')\n\nplt.xticks(rotation=0)\nplt.legend(title='Weekday')\nplt.tight_layout()\n\nplt.show()",
            "addRule": null,
            "addExample": null
        }
    },
    "211": {
        "0": {
            "belong": "Kerry",
            "question": "Find  date_address_to and the average of monthly_rental , and group by attribute other_details and bin date_address_to by weekday, and visualize them by a bar chart.",
            "hardness": "Extra Hard",
            "isDataCorrect": true,
            "isStyleCorrect": false,
            "evaluation": "Wrong order of the weekdays",
            "code": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ndf = pd.read_csv('./visEval_dataset/databases/behavior_monitoring/Student_Addresses.csv')\ndf['date_address_to'] = pd.to_datetime(df['date_address_to'])\ndf['weekday'] = df['date_address_to'].dt.day_name()\n\nresult = df.groupby(['other_details', 'weekday'])['monthly_rental'].mean().unstack()\n\nfig, ax = plt.subplots(1, 1, figsize=(10, 4))\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\nresult.plot(kind='bar', ax=ax)\n\nax.set_xlabel('Other Details and Weekday')\nax.set_ylabel('Average Monthly Rental')\nax.set_title('Average Monthly Rental by Other Details and Weekday')\nplt.suptitle(\"\")\nplt.xticks(rotation=45)\nplt.tight_layout()\nplt.show()",
            "addRule": "If show data by weekday, month or other time series, please follow the order of the time series",
            "addExample": null
        }
    },
    "224": {
        "0": {
            "belong": "Kerry",
            "question": "Give me the comparison about the sum of monthly_rental over the  date_address_from , and group by attribute other_details and bin date_address_from by weekday by a bar chart.",
            "hardness": "Extra Hard",
            "isDataCorrect": true,
            "isStyleCorrect": false,
            "evaluation": "Wrong order of the weekdays",
            "code": "Give me the comparison about the sum of monthly_rental over the  date_address_from , and group by attribute other_details and bin date_address_from by weekday by a bar chart.\n\nDatabase = behavior_monitoring;   chosen_table = Student_Addresses\n\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfig, ax = plt.subplots(1, 1, figsize=(10, 4))\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\ndf = pd.read_csv('./visEval_dataset/databases/behavior_monitoring/Student_Addresses.csv')\ndf['date_address_from'] = pd.to_datetime(df['date_address_from'])\ndf['weekday'] = df['date_address_from'].dt.day_name()\ngrouped = df.groupby(['weekday', 'other_details']).monthly_rental.sum().unstack()\ngrouped.plot(kind='bar', ax=ax)\nax.set_xlabel('Weekday')\nax.set_ylabel('Sum of Monthly Rental')\nax.set_title('Monthly Rental Sum by Weekday and Details')\nfig.suptitle('')",
            "addRule": null,
            "addExample": null
        }
    },
    "225": {
        "0": {
            "belong": "Kerry",
            "question": "Draw a bar chart about the distribution of  date_address_from and the average of monthly_rental , and group by attribute other_details and bin date_address_from by weekday.",
            "hardness": "Extra Hard",
            "isDataCorrect": true,
            "isStyleCorrect": false,
            "evaluation": "Wrong order of the weekdays; Rotated x-axis; X title overflow",
            "code": "import pandas as pd\nimport matplotlib.pyplot as plt\n\ndf = pd.read_csv(\"./visEval_dataset/databases/behavior_monitoring/Student_Addresses.csv\")\ndf['date_address_from'] = pd.to_datetime(df['date_address_from'])\ndf['weekday'] = df['date_address_from'].dt.day_name()\n\navg_rental = df.groupby(['other_details', 'weekday'])['monthly_rental'].mean().unstack()\n\nfig, ax = plt.subplots(figsize=(10, 4))\navg_rental.plot(kind='bar', ax=ax)\nax.set_xlabel('Other Details')\nax.set_ylabel('Average Monthly Rental')\nax.set_title('Average Monthly Rental by Weekday and Other Details')\nfig.suptitle('')\nplt.xticks(rotation=45)\nplt.tight_layout()\nplt.show()",
            "addRule": null,
            "addExample": null
        }
    },
    "291": {
        "0": {
            "belong": "Kerry",
            "question": "For the days with the 3 largest maximum wind speeds, show me the frequency of their corresponding date in the weekdays level using a bar chart.",
            "hardness": "Hard",
            "isDataCorrect": true,
            "isStyleCorrect": false,
            "evaluation": "Meaningless Y axis decimal coordinates",
            "code": "import pandas as pd\nimport matplotlib.pyplot as plt\nfig, ax = plt.subplots(1, 1, figsize=(10, 4))\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False) \ndf = pd.read_csv('./visEval_dataset/databases/bike_1/weather.csv')\ndf['date'] = pd.to_datetime(df['date'])\ndf['weekday'] = df['date'].dt.day_name()\ntop_wind_days = df.nlargest(3, 'max_wind_Speed_mph')\nweekday_counts = top_wind_days['weekday'].value_counts()\nweekday_counts.plot(kind='bar', ax=ax)\nax.set_xlabel('Weekdays')\nax.set_ylabel('Frequency')\nax.set_title('Frequency of Weekdays with Top 3 Max Wind Speeds')\nfig.suptitle('')",
            "addRule": "If y-axis (or x-axis) data come from a counter column or naturally integer column, make sure that axis uses integer ticks. ",
            "addExample": null
        }
    },
    "293": {
        "0": {
            "belong": "Kerry",
            "question": "For the top 3 days with the largest max wind speeds, please bin the date into the day of the week and then sum the mean temperature for a bar chart.",
            "hardness": "Hard",
            "isDataCorrect": true,
            "isStyleCorrect": false,
            "evaluation": "Wrong order of the weekdays",
            "code": "import pandas as pd\nimport matplotlib.pyplot as plt\nfrom datetime import datetime\n\ndf = pd.read_csv('./visEval_dataset/databases/bike_1/weather.csv')\ndf['date'] = pd.to_datetime(df['date'])\ndf['day_of_week'] = df['date'].dt.day_name()\n\ntop_3_days = df.nlargest(3, 'max_wind_Speed_mph')\nsummed_mean_temp = top_3_days.groupby('day_of_week')['mean_temperature_f'].sum()\n\nfig, ax = plt.subplots(1, 1, figsize=(10, 4))\nsummed_mean_temp.plot(kind='bar', ax=ax)\nax.set_xlabel('Day of the Week')\nax.set_ylabel('Summed Mean Temperature (F)')\nax.set_title('Summed Mean Temperature for Top 3 Max Wind Speed Days')\nfig.suptitle('')\nplt.xticks(rotation=45)\nplt.show()",
            "addRule": null,
            "addExample": null
        }
    },
    "295": {
        "0": {
            "belong": "Kerry",
            "question": "For the top 3 days with the largest max wind speeds, please bin the date into day of the week and then sum the mean humidity to visualize a bar chart.",
            "hardness": "Hard",
            "isDataCorrect": true,
            "isStyleCorrect": false,
            "evaluation": "Wrong order of the weekdays",
            "code": "import pandas as pd\nimport matplotlib.pyplot as plt\nfrom datetime import datetime\n\ndf = pd.read_csv('./visEval_dataset/databases/bike_1/weather.csv')\n\ndf['date'] = pd.to_datetime(df['date'])\ndf = df.sort_values(by='max_wind_Speed_mph', ascending=False).head(3)\n\ndf['day_of_week'] = df['date'].dt.day_name()\nhumidity_by_day = df.groupby('day_of_week')['mean_humidity'].sum()\n\nfig, ax = plt.subplots(1, 1, figsize=(10, 4))\nax.bar(humidity_by_day.index, humidity_by_day.values)\nax.set_xlabel('Day of the Week')\nax.set_ylabel('Total Mean Humidity')\nax.set_title('Sum of Mean Humidity for Top 3 Days with Largest Max Wind Speeds')\nfig.suptitle(\"\")\nplt.show()",
            "addRule": null,
            "addExample": null
        }
    },
    "296": {
        "0": {
            "belong": "Kerry",
            "question": "For the top 3 days with the largest max wind speeds, please bin the date into the of the week and then compute the average of mean humidity to visualize a bar chart.",
            "hardness": "Hard",
            "isDataCorrect": true,
            "isStyleCorrect": false,
            "evaluation": "Wrong order of the weekdays",
            "code": "import pandas as pd\nimport matplotlib.pyplot as plt\ndf = pd.read_csv('./visEval_dataset/databases/bike_1/weather.csv')\ndf['date'] = pd.to_datetime(df['date'])\ndf['day_of_week'] = df['date'].dt.day_name()\ntop_3_days = df.nlargest(3, 'max_wind_Speed_mph')\navg_mean_humidity_by_day = top_3_days.groupby('day_of_week')['mean_humidity'].mean()\nfig, ax = plt.subplots(1, 1, figsize=(10, 4))\nax.bar(avg_mean_humidity_by_day.index, avg_mean_humidity_by_day.values)\nax.set_xlabel('Day of the Week')\nax.set_ylabel('Average Mean Humidity')\nax.set_title('Average Mean Humidity for Top 3 Days with Largest Max Wind Speeds')\nfig.suptitle('')\nplt.show()",
            "addRule": null,
            "addExample": null
        }
    },
    "312": {
        "0": {
            "belong": "Kerry",
            "question": "Give me the proportion of end stations for the trips with the three oldest id using a pie chart.",
            "hardness": "Hard",
            "isDataCorrect": true,
            "isStyleCorrect": false,
            "evaluation": "No explicit indication of number limitation",
            "code": "import pandas as pd\nimport matplotlib.pyplot as plt\n\ndf = pd.read_csv('./visEval_dataset/databases/bike_1/trip.csv')\noldest_ids = df.nsmallest(3, 'id')\nend_station_counts = oldest_ids['end_station_name'].value_counts()\n\nfig, ax = plt.subplots(figsize=(8, 8))\nax.pie(end_station_counts, labels=end_station_counts.index, autopct='%1.1f%%')\nplt.title('Proportion of End Stations for Trips with Oldest IDs')\nplt.show()",
            "addRule": "If there is a quantity limitation in the question, you must show it in the title or the chart.",
            "addExample": null
        }
    },
    "516": {
        "0": {
            "belong": "Kerry",
            "question": "What are the first names of all employees that are professors ordered by date of birth, and count them by a bar chart",
            "hardness": "Hard",
            "isDataCorrect": true,
            "isStyleCorrect": false,
            "evaluation": "???Sorting by date of birth",
            "code": "import pandas as pd\nimport matplotlib.pyplot as plt\nfig, ax = plt.subplots(1, 1, figsize=(10, 4))\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\ndf = pd.read_csv('./visEval_dataset/databases/college_1/employee.csv')\n\ndf['EMP_DOB'] = pd.to_datetime(df['EMP_DOB'])\nprofessors = df[df['EMP_JOBCODE'] == 'PROF'].sort_values('EMP_DOB')\nprofessor_counts = professors['EMP_FNAME'].value_counts()\n\nprofessor_counts.plot(kind='bar', ax=ax)\nax.set_xlabel('First Names of Professors')\nax.set_ylabel('Count')\nax.set_title('Count of Professors by First Name')\nfig.suptitle('')",
            "addRule": null,
            "addExample": true
        }
    },
    "659": {
        "0": {
            "belong": "Kerry",
            "question": "Find the last name of female (sex is F) students in the descending order of age, and count them by a bar chart",
            "hardness": "Hard",
            "isDataCorrect": true,
            "isStyleCorrect": false,
            "evaluation": "Meaningless subtitle, Meaningless Y axis decimal coordinates",
            "code": "import pandas as pd\nimport matplotlib.pyplot as plt\n\ndf = pd.read_csv('./visEval_dataset/databases/college_3/STUDENT.csv')\ndf_female = df[df['Sex'] == 'F'].sort_values(by='Age', ascending=False)\ncount_last_name = df_female['LName'].value_counts()\n\nfig, ax = plt.subplots(1, 1, figsize=(10, 4))\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\ncount_last_name.plot(kind='bar', ax=ax)\nax.set_xlabel('Last Name')\nax.set_ylabel('Count')\nax.set_title('Count of Female Students by Last Name in Descending Order of Age')\nfig.suptitle('{}')\n\nplt.xticks(rotation=45)\nplt.tight_layout()\nplt.show()",
            "addRule": "If subtitle is meaningless, remove it.",
            "addExample": null
        }
    },
    "778": {
        "0": {
            "belong": "Kerry",
            "question": "Give me a group line chart showing the number of days with max humidity higher than 80 in different area each year.",
            "hardness": "Hard",
            "isDataCorrect": true,
            "isStyleCorrect": false,
            "evaluation": "Meaningless X axis decimal coordinates",
            "code": "import pandas as pd\nimport matplotlib.pyplot as plt\n\ndf = pd.read_csv('./visEval_dataset/databases/bike_1/weather.csv')\ndf['date'] = pd.to_datetime(df['date'])\ndf['year'] = df['date'].dt.year\ndf_filtered = df[df['max_humidity'] > 80]\ndays_count = df_filtered.groupby(['year', 'zip_code']).size().reset_index(name='count')\n\nplt.figure(figsize=(10, 6))\nfor key, grp in days_count.groupby(['zip_code']):\n    plt.plot(grp['year'], grp['count'], label=f'ZIP {key}')\n\nplt.xlabel('Year')\nplt.ylabel('Number of Days with Max Humidity > 80')\nplt.title('Days with High Humidity by Year and Area')\nplt.legend(title='ZIP Code')\nplt.show()",
            "addRule": "If axis data is year, month, or other indivisible series, make sure uses integer and do not divide them.",
            "addExample": null
        }
    },
    "1007": {
        "0": {
            "belong": "Kerry",
            "question": "Show the number of products with price higher than 1000 or lower than 500 for each product type code in a pie chart.",
            "hardness": "Hard",
            "isDataCorrect": true,
            "isStyleCorrect": false,
            "evaluation": "show the number of products, not the portion",
            "code": "import pandas as pd\nimport matplotlib.pyplot as plt\n\ndf = pd.read_csv('./visEval_dataset/databases/customers_and_products_contacts/products.csv')\n\nfiltered_df = df[(df['product_price'] > 1000) | (df['product_price'] < 500)]\ncounts = filtered_df['product_type_code'].value_counts()\n\nfig, ax = plt.subplots(figsize=(10, 4))\nax.pie(counts, labels=counts.index, autopct='%1.1f%%')\nax.set_title('Distribution of Products by Type and Price Range')\nfig.suptitle('')\nplt.show()",
            "addRule": "If the question asks for the number or count in a pie chart, show exact number, not the portion.",
            "addExample": null
        }
    },
    "1008": {
        "0": {
            "belong": "Kerry",
            "question": "Show the number of products with price higher than 1000 or lower than 500 for each product name in a pie chart.",
            "hardness": "Hard",
            "isDataCorrect": true,
            "isStyleCorrect": false,
            "evaluation": "show the number of products, not the portion",
            "code": "import pandas as pd\nimport matplotlib.pyplot as plt\n\ndf = pd.read_csv('./visEval_dataset/databases/customers_and_products_contacts/products.csv')\n\nfiltered_df = df[(df['product_price'] > 1000) | (df['product_price'] < 500)]\nproduct_counts = filtered_df['product_name'].value_counts()\n\nfig, ax = plt.subplots(1, 1, figsize=(8, 6))\nax.pie(product_counts, labels=product_counts.index, autopct='%1.1f%%', startangle=140)\nax.set_xlabel('Product Name')\nax.set_ylabel('Percentage of Products')\nplt.title('Distribution of Products with Price > 1000 or < 500')\nfig.suptitle('')\nplt.show()",
            "addRule": null,
            "addExample": null
        }
    },
    "1482": {
        "0": {
            "belong": "Kerry",
            "question": "List the number of games in each season and group by home team in a group line chart.",
            "hardness": "Hard",
            "isDataCorrect": true,
            "isStyleCorrect": false,
            "evaluation": "Incomplete data display; Meaningless Y axis decimal coordinates",
            "code": "import pandas as pd\nimport matplotlib.pyplot as plt\nfig, ax = plt.subplots(1, 1, figsize=(10, 4))\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\ndf = pd.read_csv('./visEval_dataset/databases/game_injury/game.csv')\ngrouped_df = df.groupby(['Season', 'Home_team']).size().unstack()\ngrouped_df.plot(ax=ax)\nax.set_xlabel('Season')\nax.set_ylabel('Number of Games')\nax.set_title('Number of Games in Each Season Grouped by Home Team')\nfig.suptitle('')",
            "addRule": "Make sure axis cover whole the data range. If there's a zero in data, The 0 on the coordinate axis should be displayed.",
            "addExample": null
        }
    },
    "1556": {
        "0": {
            "belong": "Kerry",
            "question": "For all employees who have the letters D or S in their first name, visualize a line chart about the change of  salary over  hire_date .",
            "hardness": "Hard",
            "isDataCorrect": true,
            "isStyleCorrect": false,
            "evaluation": "X label overlapped",
            "code": "import pandas as pd\nimport matplotlib.pyplot as plt\ndf = pd.read_csv(\"./visEval_dataset/databases/hr_1/employees.csv\")\ndf['HIRE_DATE'] = pd.to_datetime(df['HIRE_DATE'])\nfiltered_df = df[df['FIRST_NAME'].str.contains(\"D|S\")]\nsorted_df = filtered_df.sort_values('HIRE_DATE')\nplt.plot(sorted_df['HIRE_DATE'], sorted_df['SALARY'])\nplt.xlabel('Hire Date')\nplt.ylabel('Salary')\nplt.title('Salary Change Over Time for Employees with D or S in First Name')\nplt.suptitle('')\nplt.show()",
            "addRule": "If axis labels are too crowded, you can rotate the label for a better arrangement.",
            "addExample": null
        }
    },
    "1563": {
        "0": {
            "belong": "Dewei",
            "question": "For all employees who have the letters D or S in their first name, show me about the distribution of  job_id and the average of salary , and group by attribute job_id in a bar chart.",
            "hardness": "Extra Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "1574": {
        "0": {
            "belong": "Dewei",
            "question": "For all employees who have the letters D or S in their first name, show me about the correlation between  salary and  commission_pct  in a scatter chart.",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "1580": {
        "0": {
            "belong": "Dewei",
            "question": "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of  hire_date and the amount of hire_date bin hire_date by month.",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "1807": {
        "0": {
            "belong": "Dewei",
            "question": "For employees with first names that end with the letter 'm', groups and counts the first name to visualize a pie graph.",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "1831": {
        "0": {
            "belong": "Dewei",
            "question": "For those employees whose first name does not contain the letter M, sum their salary by binning the hire date into the day of week interval for visualizing a bar chart.",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "2615": {
        "0": {
            "belong": "Dewei",
            "question": "What are the payment date of the payment with amount paid higher than 300 or with payment type is 'Check', bin the payment date by month and count them by a bar chart",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "2617": {
        "0": {
            "belong": "Dewei",
            "question": "What are the payment date of the payment with amount paid higher than 300 or with payment type is 'Check, and count them by a line chart",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "2656": {
        "0": {
            "belong": "Dewei",
            "question": "Show the countries that have managers of age above 50 or below 46, and count them by a pie chart",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "2657": {
        "0": {
            "belong": "Dewei",
            "question": "Show the countries that have managers of age above 50 or below 46, and count them by a bar chart",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "2750": {
        "0": {
            "belong": "Dewei",
            "question": "What is the total number of captains in each rank and class? Let class as X-axis, and categorize by rank with a stacked bar chart.",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "2850": {
        "0": {
            "belong": "Dewei",
            "question": "What are the top 5 countries by number of invoices and how many do they have. Plot them as bar chart.",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "2851": {
        "0": {
            "belong": "Dewei",
            "question": "Show me a bar chart for what are the names of the countries and average invoice size of the top countries by size?",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "2857": {
        "0": {
            "belong": "Dewei",
            "question": "Draw a bar chart for what are the names of the top 8 countries by total invoice size and what are those sizes?",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "2998": {
        "0": {
            "belong": "Dewei",
            "question": "A bar chart for what are the number of the dates of transactions with at least 100 share count or amount bigger than 100? Bin date by weekday.",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "3222": {
        "0": {
            "belong": "Dewei",
            "question": "A bar chart shows the number of appellations whose score is higher than 93, and ordered by Name.",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "3227": {
        "0": {
            "belong": "Dewei",
            "question": "For those wines whose price is bigger than 100, group by grape, count their total number of each year and sort by year in asc in a bar chart.",
            "hardness": "Extra Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "3229": {
        "0": {
            "belong": "Dewei",
            "question": "A bar chart listing the number of wines whose price is bigger than 100 ordered by year.",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "1484@x_name@ASC": {
        "0": {
            "belong": "Dewei",
            "question": "List the number of games in each season and group by away team in a group line chart, and order in asc by the X-axis please.",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "1487@y_name@ASC": {
        "0": {
            "belong": "Dewei",
            "question": "Stacked bar chart of how many away team for with each Home_team in each away team, rank from low to high by the y-axis.",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "1488@x_name@DESC": {
        "0": {
            "belong": "Dewei",
            "question": "List the number of games for each home team and group by away team in a stacked bar chart The x-axis is home team, and I want to list x-axis in descending order.",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "1413@y_name@ASC": {
        "0": {
            "belong": "Dewei",
            "question": "How many flights with price higher than 300 for each destination city? Return a bar chart, and order in ascending by the total number.",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "298@y_name@DESC": {
        "0": {
            "belong": "Lina",
            "question": "For those dates with a max temperature greater than or equal to 80, I want to know the number of days on the day of the week interval using a bar chart, could you show from high to low by the Y?",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "303@x_name@DESC": {
        "0": {
            "belong": "Lina",
            "question": "Use a line chart to show the change in maximum temperature among all regions in July 2015, with the x-axis in ascending order.",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "330@y_name@ASC": {
        "0": {
            "belong": "Lina",
            "question": "Count those days for each year and in which zip code was the min dew point lower than any day in zip code 94107 using a bar graph, and display the number of date in ascending order.",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "349@y_name@DESC": {
        "0": {
            "belong": "Lina",
            "question": "On which day has it neither been foggy nor rained in the zip code of 94107, and bin by year, count them by a bar chart, sort by the y axis in desc.",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "927@y_name@ASC": {
        "0": {
            "belong": "Lina",
            "question": "How many accounts are opened in each day? Bin the account open day by weekday and group by other account details in a stacked bar chart, and rank by the y axis in ascending.",
            "hardness": "Extra Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "942@x_name@DESC": {
        "0": {
            "belong": "Lina",
            "question": "How many accounts are opened in each year? Show a group line chart that group by other account details, and could you order by the x axis in asc?",
            "hardness": "Extra Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "2497@y_name@DESC": {
        "0": {
            "belong": "Lina",
            "question": "What are the last year of the parties whose theme is \"Spring\" or \"Teqnology\"? Count the last year for a bar chart, I want to rank y axis in desc order.",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "2737@y_name@DESC": {
        "0": {
            "belong": "Lina",
            "question": "Draw a bar chart for how many captains with younger than 50 are in each rank?, and show Y-axis in descending order.",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "2805@y_name@ASC": {
        "0": {
            "belong": "Lina",
            "question": "A bar chart for listing the number of the names of products that are not in any event, sort the number of product name in ascending order.",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "3236@x_name@ASC": {
        "0": {
            "belong": "Lina",
            "question": "Visualize a bar chart about the number of winery of the wines whose price is bigger than 100, and rank X in ascending order.",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "1510@y_name@ASC": {
        "0": {
            "belong": "Lina",
            "question": "Show the number of companies without a gas station in each main industry with a bar chart, could you list from low to high by the Y?",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "2461@y_name@DESC": {
        "0": {
            "belong": "Lina",
            "question": "Draw a bar chart for what is average age of male for different job title?, and show Y in desc order.",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "2465@x_name@DESC": {
        "0": {
            "belong": "Lina",
            "question": "Draw a bar chart for how many people are under 40 for each gender?, and rank in desc by the x-axis.",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "2517@y_name@ASC": {
        "0": {
            "belong": "Lina",
            "question": "Show all ministers who do not belong to Progress Party, and count them by a bar chart, and order in asc by the Y.",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "1551@y_name@ASC": {
        "0": {
            "belong": "Lina",
            "question": "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday, and display from low to high by the y axis.",
            "hardness": "Extra Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "1622@y_name@ASC": {
        "0": {
            "belong": "Lina",
            "question": "For all employees in the same department as Clara excluding Clara, bin their hire date into the month interval, and count how many employees in each month for a bar chart, rank from low to high by the Y.",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "1627@x_name@DESC": {
        "0": {
            "belong": "Lina",
            "question": "Group and count the job id for all employees whose salary is smaller than any salary of those employees whose job title is MK_MAN for visualizing a bar chart, and rank by the names in desc.",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "1703@y_name@DESC": {
        "0": {
            "belong": "Lina",
            "question": "Compute the number of each type of job ids for employees who make more than the highest-earning employee with title PU_MAN, with a bar chart, and show by the the number of job id in desc.",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "1802@y_name@DESC": {
        "0": {
            "belong": "Lina",
            "question": "For those employees whose first name is ending with the letter m, show the frequency of the first name using a bar chart, list by the y-axis in desc.",
            "hardness": "Extra Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "1835@x_name@ASC": {
        "0": {
            "belong": "Lina",
            "question": "For those employees whose first name does not contain the letter M, give me a line chart to show the hire date and the corresponding salaries, show in asc by the x-axis please.",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "754@y_name@ASC": {
        "0": {
            "belong": "Zihuan",
            "question": "Return a bar chart showing the number of templates with a version number greater than 5 for each template type code, and order y-axis in ascending order.",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "620@x_name@ASC": {
        "0": {
            "belong": "Zihuan",
            "question": "How many rooms in each building have a capacity of over 50 Visualize by bar chart, list by the X in ascending.",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "647@x_name@DESC": {
        "0": {
            "belong": "Zihuan",
            "question": "How many courses are provided in each year? Visualize with a group line chart grouping by semester, could you list x axis in asc order?",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "648@x_name@ASC": {
        "0": {
            "belong": "Zihuan",
            "question": "Find the number of courses provided in each year with a group line chart that groups by semester, list the binning year in asc order.",
            "hardness": "Extra Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "657@y_name@ASC": {
        "0": {
            "belong": "Zihuan",
            "question": "How many departments whose budget is more than the average budget in each building? Show me a bar chart, list by the total number in asc.",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "3214@x_name@DESC": {
        "0": {
            "belong": "Zihuan",
            "question": "A bar chart about the number of countries for all people whose age is smaller than the average, and could you display in desc by the X-axis?",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "2066@y_name@DESC": {
        "0": {
            "belong": "Zihuan",
            "question": "Find the name and account balance of the customer whose name includes the letter 'a' Visualize them using a bar chart, show y-axis in descending order.",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "680@y_name@DESC": {
        "0": {
            "belong": "Zihuan",
            "question": "Stack bar chart of the number of headquarters vs Industry based on headquarters, display Y-axis in desc order please.",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "2165@y_name@DESC": {
        "0": {
            "belong": "Zihuan",
            "question": "What is the name of the technician whose team is not 'NYY', and count them by a bar chart, show by the total number from high to low.",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "780@y_name@DESC": {
        "0": {
            "belong": "Zihuan",
            "question": "Show the number of documents in different ending date Bin ending date by weekday and group by location code with a stacked bar chart, could you display in descending by the y axis please?",
            "hardness": "Extra Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "1006@y_name@ASC": {
        "0": {
            "belong": "Zihuan",
            "question": "Show the number of products with price higher than 1000 or lower than 500 for each product type code in a bar chart, I want to order by the total number in asc please.",
            "hardness": "Extra Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "1009@y_name@DESC": {
        "0": {
            "belong": "Zihuan",
            "question": "Show the number of products with price higher than 1000 or lower than 500 for each product name in a bar chart, and could you rank y-axis in descending order?",
            "hardness": "Extra Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "1242@y_name@ASC": {
        "0": {
            "belong": "Zihuan",
            "question": "When are the birthdays of customer who are classified as 'Good Customer' status, bin birthday by weekday and count them by a bar chart, could you order y-axis in ascending order?",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "1419@y_name@ASC": {
        "0": {
            "belong": "Zihuan",
            "question": "What are the countries of all airlines whose names start with Orbit, and count them by a bar chart, order total number from low to high order.",
            "hardness": "Extra Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "41@y_name@ASC": {
        "0": {
            "belong": "Zihuan",
            "question": "Show the average age for all female students and group them by first name in a bar chart, and could you rank the average of age in asc order?",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "42@y_name@ASC": {
        "0": {
            "belong": "Zihuan",
            "question": "A bar chart about the number of last name for all female students whose sex is F, and rank in asc by the y-axis.",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "44@y_name@DESC": {
        "0": {
            "belong": "Zihuan",
            "question": "Show the average age for all female students and group them by last name with a bar chart, and could you order the average of age in desc order?",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "1991@y_name@DESC": {
        "0": {
            "belong": "Zihuan",
            "question": "For all the claims whose claimed amount is larger than the average, bin the claim date into day of week interval and count them for visualizing a bar chart, order from high to low by the y axis.",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "2024@y_name@DESC": {
        "0": {
            "belong": "Zihuan",
            "question": "For those payments processed with Visa, bin the payment day into Year interval and count them for a bar chart, order from high to low by the y axis.",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "2028@y_name@DESC": {
        "0": {
            "belong": "Zihuan",
            "question": "Calculate the average of amount for all the payments processed with Visa by each year using a bar chart, and could you order y axis in desc order?",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "2031@y_name@ASC": {
        "0": {
            "belong": "Jing",
            "question": "For those payments processed with Visa, show me the number of payments of each day of the week using a bar chart, and sort total number in ascending order.",
            "hardness": "Hard",
            "isDataCorrect": true,
            "isStyleCorrect": false,
            "evaluation": "Incomplete data display. Meaningless Y axis decimal coordinates",
            "code": "import pandas as pd\nimport matplotlib.pyplot as plt\ndf = pd.read_csv('./visEval_dataset/databases/insurance_policies/Payments.csv')\ndf['Date_Payment_Made'] = pd.to_datetime(df['Date_Payment_Made'])\ndf['Day_of_Week'] = df['Date_Payment_Made'].dt.day_name()\nvisa_payments = df[df['Payment_Method_Code'] == 'Visa']\nvisa_payment_counts = visa_payments['Day_of_Week'].value_counts().sort_values(ascending=True)\n\nfig, ax = plt.subplots(figsize=(10, 4))\nvisa_payment_counts.plot(kind='bar', ax=ax)\nax.set_title('Number of Visa Payments by Day of the Week')\nax.set_xlabel('Day of the Week')\nax.set_ylabel('Number of Payments')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\nplt.suptitle('')\nplt.tight_layout()\nplt.show()",
            "addRule": "In a bar or line chart, even if the data is 0, it should be displayed.",
            "addExample": null
        }
    },
    "490@y_name@ASC": {
        "0": {
            "belong": "Jing",
            "question": "What are the countries of mountains with height bigger than 5000, and count them by a bar chart, and I want to list y-axis in asc order.",
            "hardness": "Hard",
            "isDataCorrect": true,
            "isStyleCorrect": false,
            "evaluation": "Meaningless Y axis decimal coordinates. Rotated X axis labels. Wrong order",
            "code": "import pandas as pd\nimport matplotlib.pyplot as plt\n\ndf = pd.read_csv('./visEval_dataset/databases/climbing/mountain.csv')\nfiltered_df = df[df['Height'] > 5000]\ncountry_counts = filtered_df['Country'].value_counts().sort_values()\n\nfig, ax = plt.subplots(1, 1, figsize=(10, 4))\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\ncountry_counts.plot(kind='bar', ax=ax)\n\nax.set_xlabel('Country')\nax.set_ylabel('Number of Mountains')\nax.set_title('Countries with Mountains Taller than 5000m')\nfig.suptitle('')\n\nplt.show()",
            "addRule": "After sorted, The data with the same value should be sorted to displayed in natural order if not specified.",
            "addExample": null
        }
    },
    "2439@x_name@ASC": {
        "0": {
            "belong": "Jing",
            "question": "What are the category of music festivals with evaluation \"Awarded\", and count them by a bar chart, I want to list x axis in asc order.",
            "hardness": "Hard",
            "isDataCorrect": true,
            "isStyleCorrect": false,
            "evaluation": "Meaningless Y axis decimal coordinates",
            "code": "import pandas as pd\nimport matplotlib.pyplot as plt\n\ndf = pd.read_csv('./visEval_dataset/databases/music_4/music_festival.csv')\ndf_awarded = df[df['Result'] == 'Awarded']\ncategory_counts = df_awarded['Category'].value_counts().sort_index()\n\nfig, ax = plt.subplots(1, 1, figsize=(10, 4))\nax.bar(category_counts.index, category_counts.values)\nax.set_xlabel('Category')\nax.set_ylabel('Count')\nax.set_title('Count of Awarded Categories in Music Festivals')\nplt.suptitle('')\nplt.xticks(rotation=45)\nplt.show()",
            "addRule": null,
            "addExample": null
        }
    },
    "2815@x_name@DESC": {
        "0": {
            "belong": "Jing",
            "question": "Compute the total number in each competition type, and then split by country. Plot a bar chart and show in desc by the x-axis.",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "11@y_name@ASC": {
        "0": {
            "belong": "Jing",
            "question": "How many faculty members do we have for each rank and gender? Plot them as bar chart, I want to sort y axis in asc order.",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "22@y_name@ASC": {
        "0": {
            "belong": "Jing",
            "question": "Show the number of male and female assistant professors with a bar chart, list y axis in ascending order.",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "1349@x_name@ASC": {
        "0": {
            "belong": "Jing",
            "question": "Draw a line chart about the change of the amount of Start_from over Start_from , and group by attribute Is_full_time and bin start_from by year, rank x axis in asc order.",
            "hardness": "Extra Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "529@x_name@DESC": {
        "0": {
            "belong": "Jing",
            "question": "Find the number of professors with a PhD degree in each department Show bar chart, and I want to sort x-axis in desc order.",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "1215@y_name@DESC": {
        "0": {
            "belong": "Jing",
            "question": "Find the number of students who are not in the largest major and group by students' first name in a bar chart, and rank from high to low by the y axis.",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "1220@x_name@DESC": {
        "0": {
            "belong": "Jing",
            "question": "What is the average age of male students in each city? Draw a bar chart, show by the names in descending.",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "1225@y_name@DESC": {
        "0": {
            "belong": "Jing",
            "question": "Find the number of students whose age is younger than the average age and group by students' first name in a bar chart, could you show in descending by the y axis?",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "1226@y_name@DESC": {
        "0": {
            "belong": "Jing",
            "question": "Find the number of students whose age is younger than the average age and group by students' last name in a bar chart, and sort by the Y-axis in descending.",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "279@y_name@DESC": {
        "0": {
            "belong": "Jing",
            "question": "A bar chart about the number of end dates for incidents with incident type code \"NOISE\" and bin by month, could you show by the y-axis from high to low please?",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "3267@y_name@ASC": {
        "0": {
            "belong": "Jing",
            "question": "For each continent where the average life expectancy is shorter than 72, show their total population with a bar chart, display in asc by the sum population.",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "2950@y_name@ASC": {
        "0": {
            "belong": "Jing",
            "question": "Find those years for all exhibitions with ticket prices lower than 15, return a bar chart that groups by year and counts the total number of years, and I want to display in ascending by the total number.",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "1979@y_name@DESC": {
        "0": {
            "belong": "Jing",
            "question": "Find the number of rooms with price higher than 120 for different decor Show bar chart, and list by the Y in descending.",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "2755@x_name@DESC": {
        "0": {
            "belong": "Jing",
            "question": "Show me a stacked bar graph, the x-axis is the nationality of ship, and the y-axis is their total number of different nationality and split by ship type, and show X-axis in desc order.",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "2756@x_name@DESC": {
        "0": {
            "belong": "Jing",
            "question": "Stack bar chart of the number of type vs Nationality based on type, and list x-axis in descending order.",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "4015": {
        "0": {
            "belong": "Jing",
            "question": "Show the relationship between the number of staff and the score of the shop. Scatter plot is preferred.",
            "hardness": "Extra Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    },
    "4033": {
        "0": {
            "belong": "Jing",
            "question": "From 1973 to 1979, show the maximum acceleration of cars with 4, 6, and 8 cylinders each year. Line chart.",
            "hardness": "Hard",
            "isDataCorrect": null,
            "isStyleCorrect": null,
            "evaluation": null,
            "code": null,
            "addRule": null,
            "addExample": null
        }
    }
}